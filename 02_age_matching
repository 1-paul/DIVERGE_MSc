library(dplyr)
library(survival)
library(MatchIt)


### Manual matching
reverse_match_caliper <- function(data, case_var = "subject_type_logical", match_var = "screener_age", k = 2, caliper = 5) {
  controls <- data[data[[case_var]] == 0, ]
  cases <- data[data[[case_var]] == 1, ]
  matched_pairs <- list()
  
  set.seed(123)  # For reproducibility
  
  for (i in 1:nrow(controls)) {
    # Calculate age differences
    age_diff <- abs(cases[[match_var]] - controls[i, match_var])
    
    # Find cases within the caliper (≤ 5 years difference)
    eligible_cases <- which(age_diff <= caliper)
    
    # Skip if no cases meet the caliper
    if (length(eligible_cases) == 0) next
    
    # Select the k closest cases (within caliper)
    closest_cases <- eligible_cases[order(age_diff[eligible_cases])][1:min(k, length(eligible_cases))]
    
    # Store matches
    matched_pairs[[i]] <- rbind(
      cbind(controls[i, ], pair_id = i, role = "control"),
      cbind(cases[closest_cases, ], pair_id = i, role = "case")
    )
    
    # Remove matched cases
    cases <- cases[-closest_cases, ]
  }
  
  matched_df <- do.call(rbind, matched_pairs)
  return(matched_df)
}

# Run matching (max 2 cases per control, ±5 years age difference)
matched_data_caliper <- reverse_match_caliper(phenotype, k = 2, caliper = 5)

clogit(subject_type_logical ~ early_loss + strata(pair_id), data = matched_data_caliper)


### Alternative
matchit_result <- matchit(
  subject_type_logical ~ screener_age,
  data = phenotype,
  method = "optimal",
  distance = "glm"
  )

matched_data <- match.data(matchit_result)
